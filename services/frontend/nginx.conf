resolver 127.0.0.11 valid=30s;  # Docker's embedded DNS

server {
    listen 80;  # Use 80 inside container, map to desired port in docker-compose
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html;
    
    # For better debugging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # SPA routing
    location / {
        try_files $uri $uri/ /index.html;
        # Prevent caching for easier development
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }
    
    # API proxy with variable for DNS resolution
    location /api/ {
        set $backend_server http://memory-service:3000;
        proxy_pass $backend_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Add error handling
        proxy_intercept_errors on;
        error_page 502 503 504 @api_down;
    }
    
    # Fallback for API being down
    location @api_down {
        return 503 '{"error": "API service temporarily unavailable"}';
        add_header Content-Type application/json;
    }
    
    # Health check that doesn't depend on backend
    location /health {
        access_log off;
        return 200 "healthy\n";
    }
    
    # Static file caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }
}
