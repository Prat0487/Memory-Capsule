FROM node:18

WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application
COPY . .

# Extract just the route handlers without starting a server
RUN echo "// CommonJS server\n\
const express = require('express');\n\
const cors = require('cors');\n\
const app = express();\n\
\n\
// Middleware\n\
app.use(cors());\n\
app.use(express.json());\n\
\n\
// Define PORT - Cloud Run provides this\n\
const PORT = process.env.PORT || 8080;\n\
\n\
// Basic health check\n\
app.get('/health', (req, res) => {\n\
  res.status(200).send('OK');\n\
});\n\
\n\
// Placeholder auth routes - you'll need to implement these based on your actual auth logic\n\
app.post('/auth/login', (req, res) => {\n\
  res.json({ success: true, message: 'Login endpoint' });\n\
});\n\
\n\
app.post('/auth/register', (req, res) => {\n\
  res.json({ success: true, message: 'Register endpoint' });\n\
});\n\
\n\
// Start the server\n\
console.log(\`Starting auth service on port \${PORT}\`);\n\
app.listen(PORT, () => {\n\
  console.log(\`Auth service running on port \${PORT}\`);\n\
});\n" > src/server.cjs

# Delete or rename the original server.js to prevent double-starting
RUN mv src/server.js src/server.js.original || echo "No server.js to rename"

EXPOSE 8080

# Use our simplified server
CMD ["node", "src/server.cjs"]
